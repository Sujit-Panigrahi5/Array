1.
// time complecity :O(n)
// space complecity :O(1)
import java.util.*;
public class MaxmumPossiableSum{
    public static void main(String[] args) {
       int []nums={1,4,3,2};
       int n=nums.length;
       int p1=1;
       int j=n-1;
       int p2=j-1;
       int max=0;
       while(p1<n){
            int min1=Math.min(nums[0], nums[p1]);
            int min2=Math.min(nums[j], nums[p2]);
            System.out.println( nums[0]+","+nums[p1]+","+ nums[j]+ ","+ nums[p2]+","+ min1+","+min2);
            int currvalue=min1+min2;
            max=Math.max(max, currvalue);
            if(p2-1==0){
                j=n-2;
                p2=j-1;
                p1++;
            } else{
                p2--;
                p1++;
            }
       }
       System.out.println(max);
    }
}
